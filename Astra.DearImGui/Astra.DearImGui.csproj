<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>

        <!--Analyzers-->
        <EnableTrimAnalyzer>true</EnableTrimAnalyzer>
        <EnableSingleFileAnalyzer>true</EnableSingleFileAnalyzer>
        <EnableAotAnalyzer>true</EnableAotAnalyzer>
        <IsAotCompatible>true</IsAotCompatible>

        <ImGuiSourceCodeDirectory>$(ProjectDir)../external/imgui/</ImGuiSourceCodeDirectory>
        <RuntimeIdentifier Condition="'$(RuntimeIdentifier)' == ''">$(NETCoreSdkRuntimeIdentifier)</RuntimeIdentifier>

        <!--
          //TODO:
          This is a temporary workaround to force our output assembly to be AnyCPU even though it realistically isn't.
          This avoids causing consumers to get a warning about this assembly being x64-only when their project is AnyCPU.
          We don't want to make people change their projects to be x64-only because eventually we want to provide an
          AnyCPU reference assembly with this one used at runtime.
        -->
        <PlatformTarget Condition="'$(PlatformTarget)' == ''">$(Platform)</PlatformTarget>
    </PropertyGroup>
    <ItemGroup>
        <NativeCodeFile Include="$(ImGuiSourceCodeDirectory)imgui*.cpp"/>
        <NativeCodeFile Include="$(ImGuiSourceCodeDirectory)imgui*.h"/>
        <NativeCodeFile Include="$(ProjectDir)../Astra.DearImGui.Native/*.cpp"/>
        <NativeCodeFile Include="$(ProjectDir)../Astra.DearImGui.Native/*.h"/>
        <None Include="@(NativeCodeFile)" Link="#Native/$([System.IO.Path]::GetFileName('%(Identity)'))"/>
        <ProjectReference Include="..\Astra.DearImGui.Native\Astra.DearImGui.Native.csproj"/>
    </ItemGroup>
</Project>
